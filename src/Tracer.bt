#!/usr/bin/env bpftrace

BEGIN {
    printf("Tracing Wine Registry Operations... Press Ctrl+C to end.\n");
}

tracepoint:syscalls:sys_enter_openat /comm == "wineserver" || comm == "wine"/ {
    $filename = str(args.filename);
    if (($filename == "system.reg") || ($filename == "user.reg") || 
        ($filename == "userdef.reg") || ($filename == "reg*.tmp")) {
        printf("REGISTRY: %s (PID %d) opening registry file: %s\n", comm, pid, $filename);
        @open_paths[pid, tid] = $filename;
    }
}


tracepoint:syscalls:sys_exit_openat /comm == "wineserver" || comm == "wine"/ {
    $filename = @open_paths[pid, tid];
    if ($filename != "") {
        $fd = args.ret;
        if ($fd >= 0) {
            printf("REGISTRY: %s (PID %d) opened registry file: %s (FD: %d)\n", comm, pid, $filename, $fd);
            @reg_files[pid, $fd] = $filename;
        }
        delete(@open_paths[pid, tid]);
    }
}

tracepoint:syscalls:sys_enter_write /comm == "wineserver" || comm == "wine"/ {
    $fd = args.fd;
    $filename = @reg_files[pid, $fd];
    if ($filename != "") {
        printf("REGISTRY WRITE: %s (PID %d) writing to registry file: %s (FD: %d)\n", 
               comm, pid, $filename, $fd);
    }
}


tracepoint:syscalls:sys_enter_rename,
tracepoint:syscalls:sys_enter_renameat,
tracepoint:syscalls:sys_enter_renameat2 /comm == "wineserver" || comm == "wine"/ {
    $oldname = str(args.oldname);
    $newname = str(args.newname);
    
    if (($newname == "system.reg") || ($newname == "user.reg") || 
        ($newname == "userdef.reg") || ($oldname == "reg*.tmp")) {
        printf("REGISTRY UPDATE: %s (PID %d) renaming %s -> %s\n", 
               comm, pid, $oldname, $newname);
    }
}

END {
    clear(@open_paths);
    clear(@reg_files);
    printf("Tracing completed.\n");
}
